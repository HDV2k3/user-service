name: Deploy Java Spring Boot Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create .env file
        run: echo "SITE_URL=${{ secrets.SITE_URL }}" >> .env

      - name: Build docker image
        run: docker build -t devhuynh2003/user-app .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to Docker Hub
        run: docker push devhuynh2003/user-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            CONTAINER_NAME="user-app-container"

            # Stop and remove the old container if it exists
            if [ "$(docker ps -aq -f name=$CONTAINER_NAME)" ]; then
              echo "Container '$CONTAINER_NAME' found. Stopping..."
              docker stop $CONTAINER_NAME || true
              echo "Removing container '$CONTAINER_NAME'..."
              docker rm -f $CONTAINER_NAME || true
            else
              echo "Container '$CONTAINER_NAME' does not exist. No action taken."
            fi

            # Remove the old image
            echo "Removing old Docker image..."
            docker rmi -f devhuynh2003/user-app:latest || true

            # Pull the latest image
            echo "Pulling the latest Docker image..."
            docker pull devhuynh2003/user-app:latest

            # Run the new container
            echo "Running the new container..."
            docker run -d -p 8080:8080 --name user-app-container devhuynh2003/user-app:latest
